public class Solution {
    public int compareVersion(String version1, String version2) {
        // Split the version numbers into components
        String[] v1 = version1.split("\\.");
        String[] v2 = version2.split("\\.");
        
        // Determine the maximum length of the two version arrays
        int len1 = v1.length;
        int len2 = v2.length;
        int maxLen = Math.max(len1, len2);
        
        // Compare each component
        for (int i = 0; i < maxLen; i++) {
            // Get the current component or 0 if the index is out of bounds
            int num1 = i < len1 ? Integer.parseInt(v1[i]) : 0;
            int num2 = i < len2 ? Integer.parseInt(v2[i]) : 0;
            
            // Compare the components
            if (num1 > num2) {
                return 1;
            } else if (num1 < num2) {
                return -1;
            }
        }
        
        // If all components are equal
        return 0;
    }

    public static void main(String[] args) {
        Solution sol = new Solution();
        
        // Test cases
        System.out.println(sol.compareVersion("1.01", "1.001"));  // Output: 0
        System.out.println(sol.compareVersion("1.0", "1.0.0"));   // Output: 0
        System.out.println(sol.compareVersion("1.0.1", "1"));      // Output: 1
        System.out.println(sol.compareVersion("1.0.1", "1.0.2"));  // Output: -1
    }
}
