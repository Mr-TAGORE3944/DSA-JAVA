// User function Template for Java

class Solution {
    
    public class Node{
        int v;
        int w;
        public Node(int v, int w){
            this.v = v;
            this.w = w;
        }
    }
    
    // public class 

    boolean pathMoreThanK(int V, int E, int K, int[] A) {
        // Code Here
        List<List<Node>> adj = new ArrayList<>();
        for (int i = 0; i < V; i++) {
            adj.add(new ArrayList<>());
        }
        
        for (int i = 0; i <= A.length-3; i += 3) {
            int u = A[i];
            int v = A[i + 1];
            int w = A[i + 2];
            adj.get(u).add(new Node(v, w));
            adj.get(v).add(new Node(u, w));  // since undirected
        }
        
        boolean path[] = new boolean[V];
        int src = 0;
        
        path[src] = true;
    return P(src,K,path,adj);
    }
    
    public boolean P(int src, int k, boolean[] path, List<List<Node>> adj){
        if(k <= 0) return true;
        
        
        for(Node node: adj.get(src)){
            
            int v = node.v;
            int w = node.w;
            
            if(path[v]) continue;
            if(w >= k) return true;
            
            path[v] = true;
            
            if(P(v, k - w, path , adj)) return true;
            path[v] = false;
        }
        return false;
    }
}