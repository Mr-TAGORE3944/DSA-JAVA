Difficulty,Title,Frequency,Acceptance Rate,Link,Topics
HARD,Minimum Operations to Form Subsequence With Target Sum,100.0,0.3222433701306941,https://leetcode.com/problems/minimum-operations-to-form-subsequence-with-target-sum,"Array, Greedy, Bit Manipulation"
MEDIUM,Count the Number of Square-Free Subsets,93.3,0.2440894568690096,https://leetcode.com/problems/count-the-number-of-square-free-subsets,"Array, Math, Dynamic Programming, Bit Manipulation, Bitmask"
HARD,Scramble String,89.0,0.41672448567970954,https://leetcode.com/problems/scramble-string,"String, Dynamic Programming"
HARD,Maximum Genetic Difference Query,85.5,0.435603460112591,https://leetcode.com/problems/maximum-genetic-difference-query,"Array, Hash Table, Bit Manipulation, Depth-First Search, Trie"
EASY,Minimum Time Visiting All Points,83.6,0.8248205429391804,https://leetcode.com/problems/minimum-time-visiting-all-points,"Array, Math, Geometry"
MEDIUM,Furthest Building You Can Reach,83.6,0.5014044339547262,https://leetcode.com/problems/furthest-building-you-can-reach,"Array, Greedy, Heap (Priority Queue)"
HARD,Difference Between Maximum and Minimum Price Sum,81.5,0.32113835950880004,https://leetcode.com/problems/difference-between-maximum-and-minimum-price-sum,"Array, Dynamic Programming, Tree, Depth-First Search"
MEDIUM,Queens That Can Attack the King,81.5,0.7213671485543371,https://leetcode.com/problems/queens-that-can-attack-the-king,"Array, Matrix, Simulation"
HARD,Minimum XOR Sum of Two Arrays,81.5,0.4869948567229978,https://leetcode.com/problems/minimum-xor-sum-of-two-arrays,"Array, Dynamic Programming, Bit Manipulation, Bitmask"
EASY,Maximum Value of an Ordered Triplet I,81.5,0.46380011367114066,https://leetcode.com/problems/maximum-value-of-an-ordered-triplet-i,Array
MEDIUM,Maximum Value of an Ordered Triplet II,81.5,0.41013838019638305,https://leetcode.com/problems/maximum-value-of-an-ordered-triplet-ii,Array
MEDIUM,Sum of Remoteness of All Cells,81.5,0.7082156308851224,https://leetcode.com/problems/sum-of-remoteness-of-all-cells,"Array, Hash Table, Depth-First Search, Breadth-First Search, Union Find, Matrix"
HARD,Make the XOR of All Segments Equal to Zero,81.5,0.3986210589731575,https://leetcode.com/problems/make-the-xor-of-all-segments-equal-to-zero,"Array, Dynamic Programming, Bit Manipulation"
HARD,Maximum XOR of Two Non-Overlapping Subtrees,81.5,0.4852374839537869,https://leetcode.com/problems/maximum-xor-of-two-non-overlapping-subtrees,"Tree, Depth-First Search, Graph, Trie"
MEDIUM,Minimum Cost to Buy Apples,81.5,0.6722773269211502,https://leetcode.com/problems/minimum-cost-to-buy-apples,"Array, Graph, Heap (Priority Queue), Shortest Path"
MEDIUM,Minimum Total Space Wasted With K Resizing Operations,81.5,0.4345002303086136,https://leetcode.com/problems/minimum-total-space-wasted-with-k-resizing-operations,"Array, Dynamic Programming"
EASY,Best Time to Buy and Sell Stock,76.5,0.5476982936604767,https://leetcode.com/problems/best-time-to-buy-and-sell-stock,"Array, Dynamic Programming"
MEDIUM,Flatten Binary Tree to Linked List,73.5,0.6768326866640542,https://leetcode.com/problems/flatten-binary-tree-to-linked-list,"Linked List, Stack, Tree, Depth-First Search, Binary Tree"
HARD,Substring with Concatenation of All Words,73.5,0.32792524050871363,https://leetcode.com/problems/substring-with-concatenation-of-all-words,"Hash Table, String, Sliding Window"
EASY,Merge Two Sorted Lists,70.1,0.6628958739922662,https://leetcode.com/problems/merge-two-sorted-lists,"Linked List, Recursion"
HARD,Painting the Walls,66.1,0.503165279937505,https://leetcode.com/problems/painting-the-walls,"Array, Dynamic Programming"
MEDIUM,Jump Game,61.1,0.39113607160756947,https://leetcode.com/problems/jump-game,"Array, Dynamic Programming, Greedy"
EASY,Fizz Buzz,61.1,0.7390301726005487,https://leetcode.com/problems/fizz-buzz,"Math, String, Simulation"
EASY,Valid Phone Numbers,54.7,0.27006273635909567,https://leetcode.com/problems/valid-phone-numbers,Shell
MEDIUM,Valid Sudoku,54.7,0.6165269790174103,https://leetcode.com/problems/valid-sudoku,"Array, Hash Table, Matrix"
MEDIUM,Binary Search Tree Iterator,54.7,0.7424911800134777,https://leetcode.com/problems/binary-search-tree-iterator,"Stack, Tree, Design, Binary Search Tree, Binary Tree, Iterator"
HARD,The Number of Good Subsets,54.7,0.35656084249365816,https://leetcode.com/problems/the-number-of-good-subsets,"Array, Math, Dynamic Programming, Bit Manipulation, Bitmask"
MEDIUM,LRU Cache,54.7,0.4443117891315718,https://leetcode.com/problems/lru-cache,"Hash Table, Linked List, Design, Doubly-Linked List"
HARD,Number of Submatrices That Sum to Target,54.7,0.7440292100185563,https://leetcode.com/problems/number-of-submatrices-that-sum-to-target,"Array, Hash Table, Matrix, Prefix Sum"
MEDIUM,Best Time to Buy and Sell Stock II,54.7,0.688563778400517,https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii,"Array, Dynamic Programming, Greedy"
MEDIUM,Merge Intervals,45.8,0.4880668261648833,https://leetcode.com/problems/merge-intervals,"Array, Sorting"
HARD,All O`one Data Structure,45.8,0.44834790358729704,https://leetcode.com/problems/all-oone-data-structure,"Hash Table, Linked List, Design, Doubly-Linked List"
MEDIUM,Longest Palindromic Substring,45.8,0.3529841631638179,https://leetcode.com/problems/longest-palindromic-substring,"Two Pointers, String, Dynamic Programming"
HARD,Sum of Distances in Tree,45.8,0.6529179912996663,https://leetcode.com/problems/sum-of-distances-in-tree,"Dynamic Programming, Tree, Depth-First Search, Graph"
EASY,Majority Element,45.8,0.6549762263373272,https://leetcode.com/problems/majority-element,"Array, Hash Table, Divide and Conquer, Sorting, Counting"
HARD,Trapping Rain Water,45.8,0.6428748683711646,https://leetcode.com/problems/trapping-rain-water,"Array, Two Pointers, Dynamic Programming, Stack, Monotonic Stack"
MEDIUM,Search in Rotated Sorted Array,45.8,0.42324054845345827,https://leetcode.com/problems/search-in-rotated-sorted-array,"Array, Binary Search"
HARD,Sliding Window Maximum,45.8,0.4724681095630856,https://leetcode.com/problems/sliding-window-maximum,"Array, Queue, Sliding Window, Heap (Priority Queue), Monotonic Queue"
